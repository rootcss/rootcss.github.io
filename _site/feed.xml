<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rootcss</title>
    <description>I will write the description here...
</description>
    <link>http://rootcss.github.io/</link>
    <atom:link href="http://rootcss.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 25 Nov 2015 02:00:04 +0530</pubDate>
    <lastBuildDate>Wed, 25 Nov 2015 02:00:04 +0530</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>PostgreSQL: update timestamp when row(s) is updated</title>
        <description>&lt;p&gt;In PostgreSQL, if you want to set current timestamp as default value, you can simply keep a column’s default expression as &lt;code class=&quot;highlighter-rouge&quot;&gt;now()&lt;/code&gt;. However, by default there is no function defined to update the timestamp when a particular row (or multiple rows) need to be updated.&lt;/p&gt;

&lt;p&gt;In such scenario, you may create your custom method and trigger it using &lt;b&gt;PostgreSQL’s Triggers&lt;/b&gt;. Following snippet will make it more clear:&lt;/p&gt;

&lt;p&gt;Here, we are creating a new method, &lt;code class=&quot;highlighter-rouge&quot;&gt;method_get_updated_at()&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method_get_updated_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRIGGER&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plpgsql&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
	  &lt;span class=&quot;k&quot;&gt;NEW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	  &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NEW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once it is created, use the following snippet to trigger it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRIGGER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEFORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EACH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROW&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;EXECUTE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method_get_updated_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you want to delete a Trigger, you can use this simple query:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRIGGER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trigger_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;column_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Please update the &lt;table_name&gt; and &lt;column_name&gt; accordingly and execute the code for your particular database. Also, note that, some web frameworks (like Rails) manage such columns(created_at, updated_at) automatically.&lt;/column_name&gt;&lt;/table_name&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Nov 2015 00:04:01 +0530</pubDate>
        <link>http://rootcss.github.io/devops/hacker/programming/2015/11/25/postgres-update-timestamp-when-row-is-updated.html</link>
        <guid isPermaLink="true">http://rootcss.github.io/devops/hacker/programming/2015/11/25/postgres-update-timestamp-when-row-is-updated.html</guid>
        
        
        <category>DevOps</category>
        
        <category>Hacker</category>
        
        <category>Programming</category>
        
      </item>
    
      <item>
        <title>Accessing PostgreSQL server through a SSH Tunnel</title>
        <description>&lt;p&gt;&lt;b&gt;Step 1:&lt;/b&gt; Check the SSH connectivity with the server, verify username and password.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Step 2:&lt;/b&gt; Create the tunnel in your local system by executing the following command (It will prompt for password):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh -fNg -L 5555:localhost:5432 &amp;lt;user&amp;gt;@&amp;lt;server&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;b&gt;Step 3:&lt;/b&gt; Now, open your PostgreSQL client (eg, &lt;code class=&quot;highlighter-rouge&quot;&gt;pgAdmin 3&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;DBeaver&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Postico&lt;/code&gt; for OS X or &lt;code class=&quot;highlighter-rouge&quot;&gt;Terminal&lt;/code&gt;) and fill in the connection details as usual. Check the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/postico-port-forwarding.png&quot; alt=&quot;Postico DB connection &quot; class=&quot;center-image image-size-medium&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Yes, you’ll have to use &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;localhost&#39;&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Nov 2015 00:04:01 +0530</pubDate>
        <link>http://rootcss.github.io/devops/hacker/programming/2015/11/25/accessing-postgreSQL-through-ssh-tunnel.html</link>
        <guid isPermaLink="true">http://rootcss.github.io/devops/hacker/programming/2015/11/25/accessing-postgreSQL-through-ssh-tunnel.html</guid>
        
        
        <category>DevOps</category>
        
        <category>Hacker</category>
        
        <category>Programming</category>
        
      </item>
    
      <item>
        <title>Welcome!</title>
        <description>&lt;p&gt;Hey there! Welcome :)&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2015 05:04:01 +0530</pubDate>
        <link>http://rootcss.github.io/2015/09/07/new.html</link>
        <guid isPermaLink="true">http://rootcss.github.io/2015/09/07/new.html</guid>
        
        
      </item>
    
  </channel>
</rss>
